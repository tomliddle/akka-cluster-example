# Config file for common settings.
# ################### Note that commented out settings indicate ones that should be filled in per envirionment #########
# ~~~~~


play {
  http.secret.key  = "345908yfkj2nw35knjvldkjgv[9azsdfp'okqjr25WDFLKMVLKN3215=-96"
  i18n.langs = ["en"]

  # to make sure the system is unique and we dont get messages from other remote akka systems
  akka.actor-system = "cluster"

  server {
    http.idleTimeout = 60s
    akka {
      requestTimeout = 40s
      default-host-header = "host"
    }
  }

  allowGlobalApplication=false

  filters.enabled=[]

  modules.enabled += "modules.Module"

}

akka {
  # make akka use plays logging framework
  # http://stackoverflow.com/questions/16048087/make-akka-aware-of-plays-logback-configuration
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  loglevel = "INFO"
  log-config-on-start = off
  log-dead-letters = off
  log-dead-letters-during-shutdown = off

  //coordinated-shutdown.terminate-actor-system = on

  actor {
    debug.autoreceive = off
    debug.lifecycle = off
    warn-about-java-serializer-usage = false
    # required for Akka clustering
    provider = "cluster"
  }

  persistence {
    query.journal.leveldb {
      class = "akka.persistence.query.journal.leveldb.LeveldbReadJournalProvider"
      write-plugin = ""
      refresh-interval = 3s
      max-buffer-size = 100
    }

    snapshot-store.plugin = "akka.persistence.snapshot-store.local"
    snapshot-store.local.dir = "target/snapshots"
  }
}

include "akkacluster.conf"

application {
  # events before a snapshot is saved
  saveSnapshotInterval = 300

  timeout = 60 seconds

  # Check frequency - logs if there is a problem
  clusterCheckFrequency = 1 minutes
  clusterLogFrequency = 60 minutes

}

container-dispatcher {
  # Dispatcher is the name of the event-based dispatcher
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    fixed-pool-size = 20
  }
  throughput = 1
}
persistent-mailbox {
  mailbox-type = "akka.dispatch.UnboundedDequeBasedMailbox"
}

my-dynamodb-journal = ${dynamodb-journal} # include the default settings
my-dynamodb-journal {                     # and add some overrides
  #journal-table =  "journal"
  journal-name =  "JOURNAL"
  #aws-access-key-id =  <your key>
  #aws-secret-access-key =  <your secret>
  endpoint =  "https://dynamodb.eu-west-1.amazonaws.com"
}

my-dynamodb-snapshot-store = ${dynamodb-snapshot-store} # include the default settings
my-dynamodb-snapshot-store {                     # and add some overrides
  #snapshot-table =  "snapshot"
  journal-name = "SNAPSHOT"
  #aws-access-key-id =  <your key, default is the same as journal>
  #aws-secret-access-key =  <your secret, default is the same as journal>
  endpoint =  "https://dynamodb.eu-west-1.amazonaws.com"
}

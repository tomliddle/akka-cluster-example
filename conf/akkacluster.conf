
akka {
  remote {

    netty.tcp {
      # note this needs to be changed in config per hostname or cluster will not work
      #hostname = ""
      # custom port
      port = 2555
    }

    watch-failure-detector {
      threshold = 100
      acceptable-heartbeat-pause = 20 s
    }

    # Used to stop failure of starting
    transport-failure-detector {
      heartbeat-interval = 4 s
      acceptable-heartbeat-pause = 20 s
    }
  }

  reasonable.downing {
    # the time to make a decision after the cluster is stable
    stable-after = 7 seconds

    # the N / 2 + 1 where N is number of nodes in a static cluster
    quorum-size = 2

    # list of the roles which be used in quorum. may be empty or absent.
    #quorum-roles = ["seed"]
  }

  cluster {
    # Added per environment - added via ansible
    #  seed-nodes = [
    #    "akka.tcp://cluster@127.0.0.1:2551",
    #    "akka.tcp://cluster@127.0.0.1:2552"]
    metrics.enabled = off

    # auto downing is NOT safe for production deployments.
    # you may want to use it during development, read more about it in the docs.
    #
    # auto-down-unreachable-after = 10s

    # reasonable downing module
    downing-provider-class = "pl.immutables.akka.reasonable.downing.StaticQuorumDowningProvider"
    min-nr-of-members = 2

    # Recommended threshold for AWS: https://doc.akka.io/docs/akka/2.5/cluster-usage.html
    failure-detector.threshold=12

    singleton {
      # The actor name of the child singleton actor.
      singleton-name = "singleton"

      # When a node is becoming oldest it sends hand-over request to previous oldest,
      # that might be leaving the cluster. This is retried with this interval until
      # the previous oldest confirms that the hand over has started or the previous
      # oldest member is removed from the cluster (+ akka.cluster.down-removal-margin).
      hand-over-retry-interval = 2s

      # The number of retries are derived from hand-over-retry-interval and
      # akka.cluster.down-removal-margin (or ClusterSingletonManagerSettings.removalMargin),
      # but it will never be less than this property.
      min-number-of-hand-over-retries = 40
    }

    singleton-proxy {
      # The actor name of the singleton actor that is started by the ClusterSingletonManager
      singleton-name = ${akka.cluster.singleton.singleton-name}

      # The role of the cluster nodes where the singleton can be deployed.
      # If the role is not specified then any node will do.
      role = ""

      # Interval at which the proxy will try to resolve the singleton instance.
      singleton-identification-interval = 1s

      # If the location of the singleton is unknown the proxy will buffer this
      # number of messages and deliver them when the singleton is identified.
      # When the buffer is full old messages will be dropped when new messages are
      # sent via the proxy.
      # Use 0 to disable buffering, i.e. messages will be dropped immediately if
      # the location of the singleton is unknown.
      # Maximum allowed buffer size is 10000.
      buffer-size = 10000
    }
  }
}